
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - ShopHub</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .form-group {
            position: relative;
        }
        .form-input {
            transition: all 0.3s ease;
        }
        .form-input:focus {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
        }
        .password-strength {
            height: 4px;
            border-radius: 2px;
            transition: all 0.3s ease;
        }
        .strength-weak { background-color: #ef4444; width: 33%; }
        .strength-medium { background-color: #f59e0b; width: 66%; }
        .strength-strong { background-color: #10b981; width: 100%; }
        .social-btn {
            transition: all 0.3s ease;
        }
        .social-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
        .error-message {
            animation: shake 0.5s ease-in-out;
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        .success-message {
            animation: slideIn 0.5s ease-out;
        }
        @keyframes slideIn {
            from { transform: translateY(-20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
    </style>
</head>
<body class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
    <!-- Header -->
    <header class="bg-white shadow-sm">
        <div class="container mx-auto px-4 py-4">
            <div class="flex items-center justify-between">
                <a href="/" class="text-2xl font-bold text-gray-900">ShopHub</a>
                <div class="flex items-center space-x-4">
                    <span class="text-gray-600">Already have an account?</span>
                    <a href="/login" class="text-blue-600 hover:text-blue-700 font-semibold">Sign In</a>
                </div>
            </div>
        </div>
    </header>

    <div class="flex items-center justify-center min-h-screen py-12 px-4">
        <div class="max-w-md w-full">
            <!-- Sign Up Card -->
            <div class="bg-white rounded-2xl shadow-xl p-8">
                <div class="text-center mb-8">
                    <div class="mx-auto w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4">
                        <i class="fas fa-user-plus text-blue-600 text-2xl"></i>
                    </div>
                    <h2 class="text-3xl font-bold text-gray-900">Create Account</h2>
                    <p class="text-gray-600 mt-2">Join ShopHub and start shopping today</p>
                </div>

                <!-- Success Message -->
                <div id="successMessage" class="hidden success-message bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-lg mb-6">
                    <div class="flex items-center">
                        <i class="fas fa-check-circle mr-2"></i>
                        <span>Account created successfully! Please check your email to verify your account.</span>
                    </div>
                </div>

                <!-- Error Message -->
                <div id="errorMessage" class="hidden error-message bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-6">
                    <div class="flex items-center">
                        <i class="fas fa-exclamation-circle mr-2"></i>
                        <span id="errorText">Please fix the errors below.</span>
                    </div>
                </div>

                <!-- Social Sign Up -->
                <div class="space-y-3 mb-6">
                    <button class="social-btn w-full flex items-center justify-center px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50">
                        <i class="fab fa-google text-red-500 mr-3"></i>
                        <span class="text-gray-700 font-medium">Continue with Google</span>
                    </button>
                    <button class="social-btn w-full flex items-center justify-center px-4 py-3 border border-gray-300 rounded-lg hover:bg-gray-50">
                        <i class="fab fa-facebook text-blue-600 mr-3"></i>
                        <span class="text-gray-700 font-medium">Continue with Facebook</span>
                    </button>
                </div>

                <!-- Divider -->
                <div class="relative mb-6">
                    <div class="absolute inset-0 flex items-center">
                        <div class="w-full border-t border-gray-300"></div>
                    </div>
                    <div class="relative flex justify-center text-sm">
                        <span class="px-2 bg-white text-gray-500">Or sign up with email</span>
                    </div>
                </div>

                <!-- Sign Up Form -->
                <form id="signupForm" action="/api/auth/signup" method="post"novalidate>
                    <!-- Name Fields -->
                    <div class=" mb-4">
                        <div class="form-group">
                            <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                            <input type="text" id="firstName" name="C_Name" required
                                class="form-input w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                               placeholder="Enter your full name">
                            <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                        </div>
                        
                    </div>

                    <!-- Email -->
                    <div class="form-group mb-4">
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email Address</label>
                        <div class="relative">
                            <input type="email" id="email" name="C_Email" required
                                class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                                placeholder="john@example.com">
                            <i class="fas fa-envelope absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                        </div>
                        <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                    </div>


                    <!-- Username -->
                    <div class="form-group mb-4">
                        <label for="username" class="block text-sm font-medium text-gray-700 mb-2">Username</label>
                        <input type="text" id="username" name="C_Username" required
                            class="form-input w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                            placeholder="Enter your username">
                        <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                    </div>

                    <!-- Phone -->
                    <div class="form-group mb-4">
                        <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                        <div class="relative">
                            <input type="tel" id="phone" name="C_Phone"
                                class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                                placeholder="+1 (555) 123-4567">
                            <i class="fas fa-phone absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                        </div>
                        <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                                  <!--Address-->
              <div class="form-group mb-4">
                        <label for="address" class="block text-sm font-medium text-gray-700 mb-2">Address</label>
                        <div class="relative">
                            <input type="tel" id="phone" name="C_Address"
                                class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                                placeholder="123 Main St, City, State, Zip">
                            <i class="fas fa-address-card absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                        </div>
                        <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                    </div>




                    <!-- Password -->
                    <div class="form-group mb-4">
                        <label for="password" class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                        <div class="relative">
                            <input type="password" id="password" name="C_Password" required
                                class="form-input w-full px-4 py-3 pl-12 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                                placeholder="Create a strong password">
                            <i class="fas fa-lock absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                            <button type="button" id="togglePassword" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <div class="mt-2">
                            <div class="flex justify-between text-sm text-gray-600 mb-1">
                                <span>Password strength:</span>
                                <span id="strengthText">Weak</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-1">
                                <div id="strengthBar" class="password-strength bg-gray-300"></div>
                            </div>
                        </div>
                        <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                    </div>

                    <!-- Confirm Password -->
                    <div class="form-group mb-6">
                        <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-2">Confirm Password</label>
                        <div class="relative">
                            <input type="password" id="confirmPassword" name="confirmPassword" required
                                class="form-input w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none"
                                placeholder="Confirm your password">
                            <i class="fas fa-lock absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                        </div>
                        <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                    </div>

                    <!-- Terms and Conditions -->
                    <div class="form-group mb-6">
                        <label class="flex items-start">
                            <input type="checkbox" id="terms" name="terms" required class="mt-1 mr-3 h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <span class="text-sm text-gray-600">
                                I agree to the <a href="/terms" class="text-blue-600 hover:text-blue-700">Terms of Service</a> 
                                and <a href="/privacy" class="text-blue-600 hover:text-blue-700">Privacy Policy</a>
                            </span>
                        </label>
                        <div class="error-text text-red-500 text-sm mt-1 hidden"></div>
                    </div>

                    <!-- Marketing Consent -->
                    <div class="form-group mb-6">
                        <label class="flex items-start">
                            <input type="checkbox" id="marketing" name="marketing" class="mt-1 mr-3 h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <span class="text-sm text-gray-600">
                                I would like to receive marketing emails about new products and special offers
                            </span>
                        </label>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" id="submitBtn"
                        class="w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
                        <span id="submitText">Create Account</span>
                        <i id="submitSpinner" class="fas fa-spinner fa-spin ml-2 hidden"></i>
                    </button>
                </form>

                <!-- Sign In Link -->
                <div class="text-center mt-6">
                    <p class="text-gray-600">
                        Already have an account? 
                        <a href="/signin" class="text-blue-600 hover:text-blue-700 font-semibold">Sign in here</a>
                    </p>
                </div>
            </div>

            <!-- Additional Info -->
            <div class="text-center mt-8">
                <p class="text-sm text-gray-500">
                    By creating an account, you're joining thousands of satisfied customers
                </p>
                <div class="flex justify-center items-center mt-4 space-x-6 text-sm text-gray-400">
                    <div class="flex items-center">
                        <i class="fas fa-shield-alt mr-2"></i>
                        <span>Secure & Safe</span>
                    </div>
                    <div class="flex items-center">
                        <i class="fas fa-truck mr-2"></i>
                        <span>Free Shipping</span>
                    </div>
                    <div class="flex items-center">
                        <i class="fas fa-headset mr-2"></i>
                        <span>24/7 Support</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('signupForm');
    const submitBtn = document.getElementById('submitBtn');
    const submitText = document.getElementById('submitText');
    const submitSpinner = document.getElementById('submitSpinner');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const togglePassword = document.getElementById('togglePassword');
    const strengthBar = document.getElementById('strengthBar');
    const strengthText = document.getElementById('strengthText');

    // Password visibility toggle
    togglePassword.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        this.querySelector('i').classList.toggle('fa-eye');
        this.querySelector('i').classList.toggle('fa-eye-slash');
    });

    // Password strength checker
    passwordInput.addEventListener('input', function() {
        const password = this.value;
        const strength = calculatePasswordStrength(password);
        updatePasswordStrength(strength);
    });

    function calculatePasswordStrength(password) {
        let score = 0;
        if (password.length >= 8) score++;
        if (/[a-z]/.test(password)) score++;
        if (/[A-Z]/.test(password)) score++;
        if (/[0-9]/.test(password)) score++;
        if (/[^A-Za-z0-9]/.test(password)) score++;
        return score;
    }

    function updatePasswordStrength(strength) {
        strengthBar.className = 'password-strength';
        if (strength <= 2) {
            strengthBar.classList.add('strength-weak');
            strengthText.textContent = 'Weak';
            strengthText.className = 'text-red-500';
        } else if (strength <= 4) {
            strengthBar.classList.add('strength-medium');
            strengthText.textContent = 'Medium';
            strengthText.className = 'text-yellow-500';
        } else {
            strengthBar.classList.add('strength-strong');
            strengthText.textContent = 'Strong';
            strengthText.className = 'text-green-500';
        }
    }

    // Form validation
    function validateField(field) {
        // Handle checkboxes separately
        let value = field.type === 'checkbox' ? field.checked : field.value.trim();
        // Find error element in the same form-group
        let errorElement = field.closest('.form-group') ? field.closest('.form-group').querySelector('.error-text') : null;
        let isValid = true;
        let errorMessage = '';

        // Clear previous errors
        field.classList.remove('border-red-500');
        if (errorElement) errorElement.classList.add('hidden');

        switch (field.name) {
            case 'C_Name':
                if (!value) {
                    errorMessage = 'This field is required';
                    isValid = false;
                } else if (value.length < 2) {
                    errorMessage = 'Must be at least 2 characters';
                    isValid = false;
                }
                break;
            case 'C_Email':
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!value) {
                    errorMessage = 'Email is required';
                    isValid = false;
                } else if (!emailRegex.test(value)) {
                    errorMessage = 'Please enter a valid email address';
                    isValid = false;
                }
                break;
            case 'C_Phone':
                const phoneRegex = /^[\+]?[0-9]{7,15}$/;
                if (value && !phoneRegex.test(value.replace(/\D/g, ''))) {
                    errorMessage = 'Please enter a valid phone number';
                    isValid = false;
                }
                break;
            case 'C_Address':
                if (!value) {
                    errorMessage = 'Address is required';
                    isValid = false;
                }
                break;
            case 'C_Password':
                if (!value) {
                    errorMessage = 'Password is required';
                    isValid = false;
                } else if (value.length < 8) {
                    errorMessage = 'Password must be at least 8 characters';
                    isValid = false;
                }
                break;
            case 'confirmPassword':
                if (!value) {
                    errorMessage = 'Please confirm your password';
                    isValid = false;
                } else if (value !== passwordInput.value) {
                    errorMessage = 'Passwords do not match';
                    isValid = false;
                }
                break;
            case 'terms':
                if (!field.checked) {
                    errorMessage = 'You must agree to the terms and conditions';
                    isValid = false;
                }
                break;
        }

        if (!isValid) {
            field.classList.add('border-red-500');
            if (errorElement) {
                errorElement.textContent = errorMessage;
                errorElement.classList.remove('hidden');
            }
        }

        return isValid;
    }

    // Add real-time validation
    const inputs = form.querySelectorAll('input');
    inputs.forEach(input => {
        input.addEventListener('blur', () => validateField(input));
        input.addEventListener('input', () => {
            if (input.classList.contains('border-red-500')) {
                validateField(input);
            }
        });
    });

    // Form submission
    form.addEventListener('submit', async function(e) {
      //  e.preventDefault();

        // Validate all fields
        let isFormValid = true;
        inputs.forEach(input => {
            if (!validateField(input)) {
                isFormValid = false;
            }
        });

        if (!isFormValid) {
            showError('Please fix the errors above');
            return;
        }

        // Show loading state
        submitBtn.disabled = true;
        submitText.textContent = 'Creating Account...';
        submitSpinner.classList.remove('hidden');

        // Prepare form data for submission
      //  const formData = new FormData(form);

       //try {
            // // Send to backend
            // const response = await fetch(form.action, {
            //     method: 'POST',
            //     body: formData
            // });
            // const result = await response.json();

            // if (response.ok) {
            //     showSuccess();
            //     form.reset();
            // } else {
            //     showError(result.message || 'Something went wrong. Please try again.');
            // }
    //    } catch (error) {
        //     showError('Something went wrong. Please try again.');
        // } finally {
        //     // Reset button state
        //     submitBtn.disabled = false;
        //     submitText.textContent = 'Create Account';
        //     submitSpinner.classList.add('hidden');
     //   }
   // });

    function showError(message) {
        const errorMessage = document.getElementById('errorMessage');
        const errorText = document.getElementById('errorText');
        const successMessage = document.getElementById('successMessage');
        
        successMessage.classList.add('hidden');
        errorText.textContent = message;
        errorMessage.classList.remove('hidden');
        
        // Scroll to top
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }

    function showSuccess() {
        const errorMessage = document.getElementById('errorMessage');
        const successMessage = document.getElementById('successMessage');
        
        errorMessage.classList.add('hidden');
        successMessage.classList.remove('hidden');
        
        // Scroll to top
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
});
    </script>
</body>
</html>